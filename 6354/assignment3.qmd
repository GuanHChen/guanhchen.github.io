---
title: "Information Management (EPPS 6354)"
subtitle: "Assignment 3"
author: "Guan Chen"
date: last-modified
toc: false
title-block-banner: true
---

#### 1. Open the Online SQL interpreter (https://www.db-book.com/db7/university-lab- dir/sqljs.html)

#### 2. Write SQL codes to get a list of:

<!-- -->

#### i. Students IDs (hint: from the takes relation)

SELECT DISTINCT ID FROM takes

#### ii. Instructors

SELECT name FROM instructor

#### iii. Departments

SELECT dept_name FROM department

<!-- -->

#### 3. Write in SQL codes to do following queries:

<!-- -->

#### i. Find the ID and name of each student who has taken at least one Comp. Sci. course; make sure there are no duplicate names in the result.

SELECT DISTINCT s.ID, s.name. 

FROM student s. 

JOIN takes t ON s.ID = t.ID. 

JOIN course c ON t.course_id = c.course_id. 

WHERE c.dept_name = 'Comp. Sci.'  

#### ii. Add grades to the list

SELECT DISTINCT s.ID, s.name, t.grade

FROM student s

JOIN takes t ON s.ID = t.ID

JOIN course c ON t.course_id = c.course_id

WHERE c.dept_name = 'Comp. Sci.';

#### iii. Find the ID and name of each student who has not taken any course offered before 2017.

Select DISTINCT s.ID, s.name

FROM student s 

JOIN takes t ON s.ID = t.ID

WHERE year < 2017

#### iv. For each department, find the maximum salary of instructors in that department. You may assume that every department has at least one instructor.

SELECT dept_name, MAX(salary)

FROM instructor

GROUP BY dept_name;

#### v. Find the lowest, across all departments, of the per-department maximum salary computed by the preceding query.

SELECT MIN(max_salary) AS min_of_max_salaries

FROM (

    SELECT MAX(salary) AS max_salary
    
    FROM instructor
    
    GROUP BY dept_name
    
) AS max_salaries;

#### vi. Add names to the list

SELECT name, MIN(max_salary) AS min_of_max_salaries

FROM (

    SELECT name, MAX(salary) AS max_salary
    
    FROM instructor
    
    GROUP BY dept_name
    
) AS max_salaries;

#### 4. Find instructor (with name and ID) who has never given an A grade in any course she or he has taught. (Instructors who have never taught a course trivially satisfy this condition.)

SELECT DISTINCT i.ID, i.name
FROM instructor i
LEFT JOIN teaches t ON i.ID = t.ID
LEFT JOIN takes ta ON ta.course_id = t.course_id
WHERE i.ID NOT IN (
    SELECT DISTINCT t.ID
    FROM teaches t
    JOIN takes ta ON t.course_id = ta.course_id
    WHERE ta.grade = 'A'
);

#### 5. Write SQL query to find the number of students in each section. The result columns should appear in the order “courseid, secid, year, semester, num”. You do not need to output sections with 0 students.

SELECT t.course_id, t.sec_id, t.year, t.semester, COUNT(t.ID) AS num
FROM takes t
JOIN section s ON t.course_id = s.course_id AND t.sec_id = s.sec_id
GROUP BY t.course_id, t.sec_id, t.year, t.semester;
